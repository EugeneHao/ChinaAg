library(sf)
library(tidyverse)
library(ggspatial)
chn_lv1 <- read_sf("MapData/gadm41_CHN_1.shp")
library(ggspatial)
chn_lv1 <- read_sf("MapData/gadm41_CHN_1.shp")
st_drivers()
chn_lv1 <- read_sf("MapData/gadm36_CHN_1.shp")
getwd()
chn_lv1 <- read_sf("MapData/gadm41_CHN_1.shp")
chn_st <- maptools::thinnedSpatialPoly(
as(chn_lv1, "Spatial"),tolerance = 0.1, minarea = 0.001,
topologyPreserve = TRUE)
chn <- st_as_sf(chn_st)
chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID) %>% purrr::map(function(x) get_df(x)) %>%
do.call(rbind, .) %>%
ggplot(aes(x = long, y = lat, group = group, fill = district)) + geom_polygon() +
scale_y_continuous(n.breaks = 5)  + theme_bw() + theme(legend.position = "none")
get_df <- function(geodf)
{
pointdf <- data.frame()
for(i in 1:nrow(geodf))
{
tmp <- geodf[i,]$geometry[[1]]
pointdf <-
rbind(pointdf,
lapply(1:length(tmp), FUN = function(x) data.frame(tmp[[x]][[1]], 1:nrow(tmp[[x]][[1]]),
paste0(geodf$ID[i], x), geodf$name[i])) %>%
do.call(rbind,.) %>% "names<-"(c("long", "lat","order", "group", "district")))  %>% return()
}
# return(pointdf)
}
chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID) %>% purrr::map(function(x) get_df(x)) %>%
do.call(rbind, .) %>%
ggplot(aes(x = long, y = lat, group = group, fill = district)) + geom_polygon() +
scale_y_continuous(n.breaks = 5)  + theme_bw() + theme(legend.position = "none")
chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID) %>% purrr::map(function(x) get_df(x)) %>%
do.call(rbind, .) %>%
ggplot(aes(x = long, y = lat, group = group, fill = district)) + geom_polygon() +
scale_y_continuous(n.breaks = 5)  + theme_bw() + theme(legend.position = "none")
get_df <- function(geodf)
{
pointdf <- data.frame()
for(i in 1:nrow(geodf))
{
tmp <- geodf[i,]$geometry[[1]]
pointdf <-
rbind(pointdf,
lapply(1:length(tmp), FUN = function(x) data.frame(tmp[[x]][[1]], 1:nrow(tmp[[x]][[1]]),
paste0(geodf$ID[i], x), geodf$name[i])) %>%
do.call(rbind,.) %>% "colnames<-"(c("long", "lat","order", "group", "district")))  %>% return()
}
# return(pointdf)
}
chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID) %>% purrr::map(function(x) get_df(x)) %>%
do.call(rbind, .) %>%
ggplot(aes(x = long, y = lat, group = group, fill = district)) + geom_polygon() +
scale_y_continuous(n.breaks = 5)  + theme_bw() + theme(legend.position = "none")
gg <- chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID)
gg[[1]]
get_df(gg[[1]])
gg
length(gg)
gg$CHN.1_1
get_df(gg$CHN.1_1)
geodf = gg$CHN.1_1
nrow(geodf)
pointdf <- data.frame()
tmp <- geodf[i,]$geometry[[1]]
pointdf <-
rbind(pointdf,
lapply(1:length(tmp), FUN = function(x) data.frame(tmp[[x]][[1]], 1:nrow(tmp[[x]][[1]]),
paste0(geodf$ID[i], x), geodf$name[i])) %>%
do.call(rbind,.) %>% "colnames<-"(c("long", "lat","order", "group", "district")))
i = 1
tmp <- geodf[i,]$geometry[[1]]
pointdf <-
rbind(pointdf,
lapply(1:length(tmp), FUN = function(x) data.frame(tmp[[x]][[1]], 1:nrow(tmp[[x]][[1]]),
paste0(geodf$ID[i], x), geodf$name[i])) %>%
do.call(rbind,.) %>% "colnames<-"(c("long", "lat","order", "group", "district")))
pointdf
tmp <- geodf$geometry[[1]]
length(tmp)
tmp
get_df <- function(geodf)
{
pointdf <- data.frame()
tmp <- geodf$geometry[[1]]
pointdf <-lapply(1:length(tmp), FUN = function(x) data.frame(tmp[[x]][[1]], 1:nrow(tmp[[x]][[1]]),
paste0(geodf$ID[i], x), geodf$name[i])) %>%
do.call(rbind,.) %>% "colnames<-"(c("long", "lat","order", "group", "district"))
return(pointdf)
}
chn %>% transmute(ID = GID_1, points = geometry, name = NAME_1) %>%
split(.$ID) %>% purrr::map(function(x) get_df(x)) %>%
do.call(rbind, .) %>%
ggplot(aes(x = long, y = lat, group = group, fill = district)) + geom_polygon() +
scale_y_continuous(n.breaks = 5)  + theme_bw() + theme(legend.position = "none")
