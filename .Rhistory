View(rawacre)
table(rawacre$region)
rawacre$region <- factor(rawacre$region,
labels = c("Yunnan", "Neimenggu", "Jilin", "Sichuan", "Anhui", "Shandong", "Shanxi", "Guangxi",
"Xinjiang", "Jiangsu", "Hebei", "Henan", "Hubei", "Gansu", "Guizhou", "Liaoning",
"Shaanxi", "Heilongjiang"))
table(rawacre)
table(rawacre$index)
rawacre$index <- factor(rawacre$index,
labels = c("total", "statefarm", "soybean",
"wheat", "corn", "rice", "allfarm"))
table(rawacre$index, rawacre$region)
head(rawacre)
bead(rawacre)
View(rawacre)
impute_values <- function(df) {
closest_year_with_value <- min(df$year[!is.na(df$value)])
for (i in 1:nrow(df)) {
if (is.na(df$value[i])) {
if (df$year[i] < closest_year_with_value) {
df$value[i] <- df$value[df$year == closest_year_with_value]
} else {
df$value[i] <- df$value[i - 1]
}
}
}
return(df)
}
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
View(imputed_data)
imputed_data <- imputed_data %>% spread(key = index, value = value)
head(imputed_data)
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %<%
mutate_at(vars(total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %>%
mutate_at(vars(total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
head(imputed_data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %>%
mutate_at(vars(year, total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %>%
mutate_at(vars(year, total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
head(imputed_data)
# we do not need 2000 data right now
acredat <- imputed_data %>% filter(year != 2000)
head(acredat)
# compute share
acredat <- acredat %>% mutate(soybean_share = round(100 * soybean/total, 2),
wheat_share = round(100 * wheat/total, 2),
corn_share = round(100 * corn/total, 2),
rice_share = round(100 * rice/total, 2),
stateprop = round(100 * statefarm/allfarm, 2)) %>%
mutate(other = 100 - soybean_share - wheat_share - corn_share - rice_share)
View(acredat)
acredat %>% group_by(region) %>% summarise(meanprop = mean(stateprop))
# we do not need 2000 data right now
acredat <- imputed_data %>% filter(year != 2000)
# compute share
acredat <- acredat %>% mutate(soybean_share = round(100 * soybean/total, 2),
wheat_share = round(100 * wheat/total, 2),
corn_share = round(100 * corn/total, 2),
rice_share = round(100 * rice/total, 2),
stateprop = round(100 * statefarm/allfarm/10, 2)) %>%
mutate(other = 100 - soybean_share - wheat_share - corn_share - rice_share)
acredat %>% group_by(region) %>% summarise(meanprop = mean(stateprop))
# we do not need 2000 data right now
acredat <- imputed_data %>% filter(year != 2000)
# compute share
acredat <- acredat %>% mutate(soybean_share = round(100 * soybean/total, 2),
wheat_share = round(100 * wheat/total, 2),
corn_share = round(100 * corn/total, 2),
rice_share = round(100 * rice/total, 2),
stateprop = round(100 * statefarm/total, 2)) %>%   # allfarm/10
mutate(other = 100 - soybean_share - wheat_share - corn_share - rice_share)
acredat %>% group_by(region) %>% summarise(meanprop = mean(stateprop))
# now we want to use 18 different provinces
library(tidyverse)
### Data 1: Cost Data  (including yield, sale price, cost) ####
rawcost <- rbind(readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/cost0821-1.xls"),
readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/cost0821-2.xls"))
names(rawcost) <- c("index", "region", "crop", "year", "value")
rawcost$region <- factor(rawcost$region,
labels = c("Yunnan", "Neimenggu", "Jilin", "Sichuan", "Anhui", "Shandong", "Shanxi", "Guangxi",
"Xinjiang", "Jiangsu", "Hebei", "Henan", "Hubei", "Gansu", "Guizhou", "Liaoning",
"Shaanxi", "Heilongjiang"))
# (Note: have not sorted by year yet ! )
costdat <- rawcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
costdat$index <- factor(costdat$index, labels = c("yield", "price", "cost"))
ricecateg <- c("中籼稻", "早籼稻", "晚籼稻", "粳稻")
costdat$crop <- factor(costdat$crop, labels = c("rice", "soybean", "wheat", "rice", "rice", "corn", "rice"))
costdat$value <- as.numeric(costdat$value)
gg <- costdat %>% group_by(region, index, crop, year) %>%
summarise(avg = ifelse(n() == 1, value, sum(value, na.rm = T)/sum(!is.na(value)))) %>%
arrange(region, index, crop, year) %>% ungroup()
gg$year <- as.numeric(gg$year)
# 18 provinces, 3 indexes, 4 crops, 21 years
newcostdat <- data.frame(region = rep(unique(gg$region), each = 3 * 4 * 21),
index = rep(rep(unique(gg$index), each = 4 * 21), 18),
crop = rep(rep(unique(gg$crop), each = 21), 18 * 3),
year = rep(2001:2021, 18 * 3 * 4))
newcostdat <- left_join(newcostdat, gg)
# impute yield and price
avgcost <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/costavg0821.xls")
names(avgcost) <- c("index", "region", "crop", "year", "avgvalue")
avgcost <- avgcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
avgcost$index <- factor(avgcost$index, labels = c("yield", "price", "cost"))
avgcost$crop <- factor(avgcost$crop, labels = c("soybean", "wheat", "corn", "rice"))
avgcost$value <- as.numeric(avgcost$value)
avgcost$year <- as.numeric(avgcost$year)
# combine data
newcostdat <- newcostdat %>% left_join(., avgcost %>% select(-region))
for(i in 1:nrow(newcostdat))
{
if(is.na(newcostdat$avg[i]))
{
newcostdat$avg[i] <- newcostdat$avgvalue[i]
}
}
costdat <- newcostdat %>% select(-avgvalue) %>% spread(key = index, value = avg)
### Data 2: Acreage Information ####
rawacre <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/acre0821.xls")
colnames(rawacre) <- c("index", "region", "year", "value")
# region
rawacre$region <- factor(rawacre$region,
labels = c("Yunnan", "Neimenggu", "Jilin", "Sichuan", "Anhui", "Shandong", "Shanxi", "Guangxi",
"Xinjiang", "Jiangsu", "Hebei", "Henan", "Hubei", "Gansu", "Guizhou", "Liaoning",
"Shaanxi", "Heilongjiang"))
rawacre$index <- factor(rawacre$index,
labels = c("total", "statefarm", "soybean",
"wheat", "corn", "rice", "allfarm"))
impute_values <- function(df) {
closest_year_with_value <- min(df$year[!is.na(df$value)])
for (i in 1:nrow(df)) {
if (is.na(df$value[i])) {
if (df$year[i] < closest_year_with_value) {
df$value[i] <- df$value[df$year == closest_year_with_value]
} else {
df$value[i] <- df$value[i - 1]
}
}
}
return(df)
}
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %>%
mutate_at(vars(year, total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
# we do not need 2000 data right now
acredat <- imputed_data %>% filter(year != 2000)
# compute share
acredat <- acredat %>% mutate(soybean_share = round(100 * soybean/total, 2),
wheat_share = round(100 * wheat/total, 2),
corn_share = round(100 * corn/total, 2),
rice_share = round(100 * rice/total, 2),
stateprop = round(100 * statefarm/total, 2)) %>%   # allfarm/10
mutate(other = 100 - soybean_share - wheat_share - corn_share - rice_share)
acredat %>% group_by(region) %>% summarise(meanprop = mean(stateprop))
rawcost <- rbind(readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/cost0821-1.xls"),
readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/cost0821-2.xls"))
names(rawcost) <- c("index", "region", "crop", "year", "value")
rawcost$region <- factor(rawcost$region,
labels = c("Yunnan", "Neimenggu", "Jilin", "Sichuan", "Anhui", "Shandong", "Shanxi", "Guangxi",
"Xinjiang", "Jiangsu", "Hebei", "Henan", "Hubei", "Gansu", "Guizhou", "Liaoning",
"Shaanxi", "Heilongjiang"))
costdat <- rawcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
costdat$index <- factor(costdat$index, labels = c("yield", "price", "cost"))
ricecateg <- c("中籼稻", "早籼稻", "晚籼稻", "粳稻")
costdat$crop <- factor(costdat$crop, labels = c("rice", "soybean", "wheat", "rice", "rice", "corn", "rice"))
head(costdat)
is.na(costdat$value)
costdat$value <- as.numeric(costdat$value)
gg <- costdat %>% group_by(region, index, crop, year) %>%
summarise(avg = ifelse(n() == 1, value, sum(value, na.rm = T)/sum(!is.na(value)))) %>%
arrange(region, index, crop, year) %>% ungroup()
gg$year <- as.numeric(gg$year)
# 18 provinces, 3 indexes, 4 crops, 21 years
newcostdat <- data.frame(region = rep(unique(gg$region), each = 3 * 4 * 21),
index = rep(rep(unique(gg$index), each = 4 * 21), 18),
crop = rep(rep(unique(gg$crop), each = 21), 18 * 3),
year = rep(2001:2021, 18 * 3 * 4))
newcostdat <- left_join(newcostdat, gg)
avgcost <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/costavg0821.xls")
names(avgcost) <- c("index", "region", "crop", "year", "avgvalue")
avgcost <- avgcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
avgcost$index <- factor(avgcost$index, labels = c("yield", "price", "cost"))
avgcost$crop <- factor(avgcost$crop, labels = c("soybean", "wheat", "corn", "rice"))
avgcost$value <- as.numeric(avgcost$value)
avgcost <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/costavg0821.xls")
names(avgcost) <- c("index", "region", "crop", "year", "avgvalue")
avgcost <- avgcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
avgcost$index <- factor(avgcost$index, labels = c("yield", "price", "cost"))
avgcost$crop <- factor(avgcost$crop, labels = c("soybean", "wheat", "corn", "rice"))
head(avgcost)
avgcost$value <- as.numeric(avgcost$value)
head(avgcost)
avgcost <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/costavg0821.xls")
names(avgcost) <- c("index", "region", "crop", "year", "avgvalue")
avgcost <- avgcost %>% filter(index %in% c("主产品产量（千克）", "平均出售价格（元）", "总成本（元）"))
avgcost$index <- factor(avgcost$index, labels = c("yield", "price", "cost"))
avgcost$crop <- factor(avgcost$crop, labels = c("soybean", "wheat", "corn", "rice"))
head(avgcost)
avgcost$avgvalue <- as.numeric(avgcost$avgvalue)
avgcost$year <- as.numeric(avgcost$year)
# combine data
newcostdat <- newcostdat %>% left_join(., avgcost %>% select(-region))
for(i in 1:nrow(newcostdat))
{
if(is.na(newcostdat$avg[i]))
{
newcostdat$avg[i] <- newcostdat$avgvalue[i]
}
}
costdat <- newcostdat %>% select(-avgvalue) %>% spread(key = index, value = avg)
### Data 2: Acreage Information ####
rawacre <- readxl::read_xls("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/rawdata/update/acre0821.xls")
colnames(rawacre) <- c("index", "region", "year", "value")
rawacre$region <- factor(rawacre$region,
labels = c("Yunnan", "Neimenggu", "Jilin", "Sichuan", "Anhui", "Shandong", "Shanxi", "Guangxi",
"Xinjiang", "Jiangsu", "Hebei", "Henan", "Hubei", "Gansu", "Guizhou", "Liaoning",
"Shaanxi", "Heilongjiang"))
rawacre$index <- factor(rawacre$index,
labels = c("total", "statefarm", "soybean",
"wheat", "corn", "rice", "allfarm"))
impute_values <- function(df) {
closest_year_with_value <- min(df$year[!is.na(df$value)])
for (i in 1:nrow(df)) {
if (is.na(df$value[i])) {
if (df$year[i] < closest_year_with_value) {
df$value[i] <- df$value[df$year == closest_year_with_value]
} else {
df$value[i] <- df$value[i - 1]
}
}
}
return(df)
}
# Applying the function to each combination of index and region
imputed_data <- rawacre %>%
group_by(index, region) %>%
nest() %>%
mutate(data = lapply(data, impute_values)) %>%
unnest(data)
imputed_data <- imputed_data %>% spread(key = index, value = value) %>%
mutate_at(vars(year, total, statefarm, soybean, wheat, corn, rice, allfarm), as.numeric)
# we do not need 2000 data right now
acredat <- imputed_data %>% filter(year != 2000)
# compute share
acredat <- acredat %>% mutate(soybean_share = round(100 * soybean/total, 2),
wheat_share = round(100 * wheat/total, 2),
corn_share = round(100 * corn/total, 2),
rice_share = round(100 * rice/total, 2),
stateprop = round(100 * statefarm/total, 2)) %>%   # allfarm/10
mutate(other = 100 - soybean_share - wheat_share - corn_share - rice_share)
acredat %>% group_by(region) %>% summarise(meanprop = mean(stateprop))
### Data 3: Future Price ####
fuprice <- readRDS("From Hao/data/heilongjiang/future_price.rds") %>%
filter(month == "03") %>% select(year, crop, ex_price) %>%
mutate(year = as.numeric(year))
my_fuprice <- data.frame(year = rep(2001:2021, 4),
crop = rep(c("corn", "rice", "soybean", "wheat"), each = 21)) %>%
left_join(., fuprice)
# load the price data
price <- readxl::read_xls("From Hao/rawdata/全国平均价格.xls")
names(price) <- c("index", "region", "crop", "year", "price")
price$year <- as.numeric(price$year)
price$price <- as.numeric(price$price)
price$crop <- factor(price$crop, labels = c("soybean", "wheat", "corn", "rice"))
price <- price %>% filter(year %in% 2001:2021) %>% select(crop, year, price)
# price is the price of 50kg crops
my_fuprice <- left_join(my_fuprice, price) %>% mutate(price = price/50)
# impute the missing future price
for(i in unique(my_fuprice$crop))
{
if(i == "rice")
{
price_diff <- (my_fuprice %>% filter(crop == i, !is.na(ex_price)) %>% "$"(ex_price) %>% mean()) -
(my_fuprice %>% filter(crop == i, !is.na(ex_price)) %>% "$"(price) %>% mean())
my_fuprice$ex_price[is.na(my_fuprice$ex_price) & (my_fuprice$crop == i)] <-
my_fuprice$price[is.na(my_fuprice$ex_price) & (my_fuprice$crop == i)] + price_diff
} else
{
lm_exprice <- lm(ex_price ~ price, dat = my_fuprice %>% filter(crop == i))
my_fuprice$ex_price[is.na(my_fuprice$ex_price) & (my_fuprice$crop == i)] <-
predict(lm_exprice, newdata = my_fuprice %>% filter(crop == i, is.na(ex_price)))
}
}
names(my_fuprice)[4] <- "national"
multidat <- multidat %>% left_join(., my_fuprice, by = c("crop", "year"))
head(costdat)
head(acredat)
# combine the two data sets
multidat <- left_join(costdat,
acredat %>% select(region, year, soybean_share, wheat_share,
corn_share, rice_share, stateprop, other) %>%
gather(key = crop, value = share, -region, -year, -other, -stateprop) %>%
mutate(crop = factor(crop, labels = c("corn", "rice", "soybean", "wheat"))))
head(multidat)
multidat %>% filter(crop == "rice") %>% group_by(region) %>% summarise(rice = mean(share))
multidat %>% filter(crop == "corn") %>% group_by(region) %>% summarise(corn = mean(share))
multidat %>% filter(crop == "soybean") %>% group_by(region) %>% summarise(soybean = mean(share))
multidat %>% filter(crop == "wheat") %>% group_by(region) %>% summarise(soybean = mean(wheat))
multidat %>% filter(crop == "wheat") %>% group_by(region) %>% summarise(wheat = mean(share))
multidat <- multidat %>% left_join(., my_fuprice, by = c("crop", "year"))
head(multidat)
subsidy <- readRDS("From Hao/data/heilongjiang/dat.rds") %>% select(crop, year, subsidy_mu) %>%
"colnames<-"(c("crop", "year", "subsidy"))
# add land fertility protection subsidies (for V2)
subsidy$subsidy[subsidy$year == 2015] <- subsidy$subsidy[subsidy$year == 2015] + 57.58
subsidy$subsidy[subsidy$year == 2016] <- subsidy$subsidy[subsidy$year == 2016] + 71.45
subsidy$subsidy[subsidy$year == 2017] <- subsidy$subsidy[subsidy$year == 2017] + 71.50
subsidy$subsidy[subsidy$year == 2018] <- subsidy$subsidy[subsidy$year == 2018] + 71.70
subsidy$subsidy[subsidy$year == 2019] <- subsidy$subsidy[subsidy$year == 2019] + 72.41
subsidy$subsidy[subsidy$year == 2020] <- subsidy$subsidy[subsidy$year == 2020] + 56.72
subsidy$subsidy[subsidy$year == 2021] <- subsidy$subsidy[subsidy$year == 2021] + 56.72
multidat <- multidat %>% left_join(., subsidy)
multidat$subsidy[is.na(multidat$subsidy)] <- 0
# change cost unit to yuan/kg
multidat$cost <- multidat$cost/multidat$yield
# important! arrange before we calculate lag
multidat <- multidat %>% arrange(region, crop)
# transform price to unit price
multidat <- multidat %>% mutate(price = price/yield)
multidat <- multidat %>%
mutate(profit_true = yield * (price - cost) + subsidy)
multidat$yield_lag <- get_lag(multidat, "yield", 3, weight = c(0.34, 0.33, 0.33))
get_lag <- function(data, oldname, lag, weight)
{
newvec <- NULL
index = which(names(data) == oldname)
for(i in unique(data$region))
{
for(j in unique(data$crop))
{
tmpdat <- data %>% filter(region == i, crop == j)
length <- nrow(tmpdat)
oldvec <- tmpdat[,index] %>% unlist()
tmpvec <- NULL
for(k in 1:lag)
{
tmpvec <- cbind(tmpvec, c(rep(oldvec[1], k), oldvec[-(length + 1 - (1:k))]))
}
newvec <- c(newvec, as.vector(tmpvec %*% weight))
}
}
return(newvec)
}
multidat$yield_lag <- get_lag(multidat, "yield", 3, weight = c(0.34, 0.33, 0.33))
multidat$subsidy_lag <- get_lag(multidat, "subsidy", 2, weight = c(0.67, 0.33))
multidat <- multidat %>% mutate(profit_ex = yield_lag * (ex_price - cost) + subsidy_lag)
multidat$profit_ex_lag <- get_lag(multidat, "profit_ex", 1, weight = 1)
multidat$profit_true_lag <- get_lag(multidat, "profit_true", 1, weight = 1)
multidat <- multidat %>% mutate(profit_ex = yield_lag * (ex_price - cost) )   # now not include subsidy ! # + subsidy_lag
multidat$profit_ex_lag <- get_lag(multidat, "profit_ex", 1, weight = 1)
multidat$profit_true_lag <- get_lag(multidat, "profit_true", 1, weight = 1)
# arrange the data set
multidat <- multidat %>% arrange(region, crop, year)
multidat <- multidat %>%
mutate(pfex_corn = multidat %>% filter(crop == "corn") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_rice = multidat %>% filter(crop == "rice") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_soy = multidat %>% filter(crop == "soybean") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_wheat = multidat %>% filter(crop == "wheat") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector()
)
multidat$share_lag <- get_lag(multidat, "share", 1, weight = 1)
multidat$share[multidat$share == 0] <- 0.1
multidat$policy <- multidat$subsidy > 0
multidat <- multidat %>%
mutate(share_wheat = multidat %>% filter(crop == "wheat") %>% "$"(share) %>%
matrix(., nrow = 21) %>%
kronecker(rep(1, 4), .) %>% as.vector()) %>%
mutate(y2 = log(share/(other + share_wheat)))           # y2 is the relative share
head(multidat)
preddat <- multidat %>% filter(year == 2021)
regdat <- multidat %>% filter(year < 2021)
saveRDS(regdat, "From Hao/data/18provinces/regdat_18prov.rds")
saveRDS(preddat, "From Hao/data/18provinces/preddat_18prov.rds")
regdat <- readRDS("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/data/18provinces/regdat_18prov.rds")
preddat <- readRDS("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/data/18provinces/preddat_18prov.rds")
regdat <- rbind(regdat, preddat)
t
multidat <- multidat %>%
mutate(pfex_corn = multidat %>% filter(crop == "corn") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_rice = multidat %>% filter(crop == "rice") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_soy = multidat %>% filter(crop == "soybean") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector(),
pfex_wheat = multidat %>% filter(crop == "wheat") %>% "$"(profit_ex) %>%
matrix(., nrow = 21) %>% # "+"(400) %>% log() %>%
kronecker(rep(1, 4), .) %>% as.vector()
) %>%
mutate(
subsidy_corn = multidat %>% filter(crop == "corn") %>% "$"(subsidy) %>%
matrix(., nrow = 21) %>% kronecker(rep(1, 4), .) %>% as.vector(),
subsidy_rice = multidat %>% filter(crop == "rice") %>% "$"(subsidy) %>%
matrix(., nrow = 21) %>% kronecker(rep(1, 4), .) %>% as.vector(),
subsidy_soy = multidat %>% filter(crop == "soybean") %>% "$"(subsidy) %>%
matrix(., nrow = 21) %>% kronecker(rep(1, 4), .) %>% as.vector()
)
multidat$share_lag <- get_lag(multidat, "share", 1, weight = 1)
multidat$share[multidat$share == 0] <- 0.1
multidat$policy <- multidat$subsidy > 0
multidat <- multidat %>%
mutate(share_wheat = multidat %>% filter(crop == "wheat") %>% "$"(share) %>%
matrix(., nrow = 21) %>%
kronecker(rep(1, 4), .) %>% as.vector()) %>%
mutate(y2 = log(share/(other + share_wheat)))           # y2 is the relative share
preddat <- multidat %>% filter(year == 2021)
regdat <- multidat %>% filter(year < 2021)
View(multidat)
View(multidat %>% select(region, crop, year, subsidy, subsidy_corn, subsidy_rice, subsidy_soy))
preddat <- multidat %>% filter(year == 2021)
regdat <- multidat %>% filter(year < 2021)
saveRDS(regdat, "From Hao/data/18provinces/regdat_18prov.rds")
saveRDS(preddat, "From Hao/data/18provinces/preddat_18prov.rds")
regdat <- readRDS("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/data/18provinces/regdat_18prov.rds")
preddat <- readRDS("/Users/sunhao/Documents/GitHub/ChinaAg/From Hao/data/18provinces/preddat_18prov.rds")
regdat <- rbind(regdat, preddat)
View(regdat)
lm_corn_pf <- lm(y2 ~ 0 + region + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop, data = regdat %>% filter(crop == "corn"))
summary(lm_corn_pf)
lm_soy_pf <- lm(y2 ~ 0 + region + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop, data = regdat %>% filter(crop == "soybean"))
summary(lm_soy_pf)
lm_rice_pf <- lm(y2 ~ 0 + region + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop, data = regdat %>% filter(crop == "rice"))
summary(lm_rice_pf)
library(lme4)
?lmer
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn"))
summary(glm_corn_pf)
glm_corn_pf
glm_corn_pf@resp
glm_corn_pf@Gp
glm_corn_pf@frame
glm_corn_pf@flist
library(lmerTest)
install.packages("lmerTest")
library(lmerTest)
summary(glm_corn_pf)
library(lmerTest)
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn"))
summary(glm_corn_pf)
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn")，
control = lmerControl(optimizer = "Nelder_Mead"))
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn"),
control = lmerControl(optimizer = "Nelder_Mead", optCtrl = list(maxfun = 1e5)))
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn"),
control = lmerControl(optimizer = "Nelder_Mead", optCtrl = list(maxfun = 100)))
glm_corn_pf <- lmer(y2 ~ 0 + pfex_corn + pfex_rice + pfex_soy + subsidy_corn + subsidy_rice + subsidy_soy +
stateprop | region, data = regdat %>% filter(crop == "corn"),
control = lmerControl(optimizer = "Nelder_Mead"))
summary(glm_corn_pf)
dat <- readRDS("~/Documents/Projects/Edge-of-field/dat/dat.rds")
head(dat)
dim(dat)
preddat_18prov <- readRDS("~/Documents/GitHub/ChinaAg/From Hao/data/18provinces/preddat_18prov.rds")
regdat_18prov <- readRDS("~/Documents/GitHub/ChinaAg/From Hao/data/18provinces/regdat_18prov.rds")
result <- rbind(regdat_18prov, preddat_18prov)
View(result)
library(tidyverse)
result %>% arrange(region, crop, year) -> newresult
View(newresult)
write.csv(newresult, "From Hao/data/18provinces/alldata.csv")
install.packages("Rcpp")
install.packages("sp")
install.packages("sf")
install.packages("inline")
install.packages("shiny")
install.packages("pander")
